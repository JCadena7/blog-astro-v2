---
interface Props {
  class?: string;
  variant?: 'default' | 'compact' | 'minimal';
}

const { class: className = '', variant = 'default' } = Astro.props;
---

<div class={`theme-selector ${className} theme-selector-${variant}`}>
  {variant !== 'minimal' && (
    <h3 class="theme-title">Tema</h3>
  )}
  <div class="theme-options">
    <button id="theme-light" class="theme-option" title="Tema claro">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <circle cx="12" cy="12" r="5"></circle>
        <line x1="12" y1="1" x2="12" y2="3"></line>
        <line x1="12" y1="21" x2="12" y2="23"></line>
        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
        <line x1="1" y1="12" x2="3" y2="12"></line>
        <line x1="21" y1="12" x2="23" y2="12"></line>
        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
      </svg>
      {variant === 'default' && <span>Claro</span>}
    </button>
    <button id="theme-dark" class="theme-option" title="Tema oscuro">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
      </svg>
      {variant === 'default' && <span>Oscuro</span>}
    </button>
    <button id="theme-auto" class="theme-option" title="Tema automÃ¡tico">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
        <line x1="8" y1="21" x2="16" y2="21"></line>
        <line x1="12" y1="17" x2="12" y2="21"></line>
      </svg>
      {variant === 'default' && <span>Auto</span>}
    </button>
  </div>
</div>

<style>
  /* Estilos para el selector de tema */
  .theme-selector {
    padding: 1rem;
    border-top: 1px solid var(--border-color);
    margin-top: 1rem;
  }
  
  .theme-title {
    font-size: 1rem;
    margin-bottom: 0.75rem;
    color: var(--text-color);
  }
  
  .theme-options {
    display: flex;
    gap: 0.5rem;
  }
  
  .theme-option {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: var(--card-bg, #fff);
    border: 1px solid var(--border-color, #ddd);
    border-radius: 8px;
    padding: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
    color: var(--text-color, #333);
    flex: 1;
  }
  
  .theme-option:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px var(--shadow-color, rgba(0, 0, 0, 0.1));
  }
  
  .theme-option svg {
    width: 20px;
    height: 20px;
    margin-bottom: 4px;
    color: var(--text-color, #333);
  }
  
  .theme-option span {
    font-size: 0.75rem;
    color: var(--text-color, #333);
  }
  
  .theme-option.active {
    border-color: var(--primary-color, #007bff);
    background-color: rgba(var(--primary-color-rgb, 0, 123, 255), 0.1);
    color: var(--primary-color, #007bff);
  }
  
  .theme-option.active svg {
    color: var(--primary-color, #007bff);
  }
  
  /* Variantes */
  .theme-selector-compact {
    padding: 0.5rem;
    margin-top: 0.5rem;
  }
  
  .theme-selector-compact .theme-title {
    font-size: 0.8rem;
    margin-bottom: 0.5rem;
  }
  
  .theme-selector-compact .theme-option {
    padding: 0.3rem;
  }
  
  .theme-selector-compact .theme-option svg {
    width: 16px;
    height: 16px;
  }
  
  .theme-selector-minimal {
    padding: 0;
    margin: 0;
    border: none;
  }
  
  .theme-selector-minimal .theme-option {
    padding: 0.3rem;
    border: none;
    background: transparent;
  }
  
  .theme-selector-minimal .theme-option svg {
    width: 16px;
    height: 16px;
    margin-bottom: 0;
  }
  
  .theme-selector-minimal .theme-option.active {
    background-color: transparent;
    transform: scale(1.1);
  }
</style> 