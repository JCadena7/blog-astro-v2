---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
// import '../styles/global.css';
import '../styles/neumorphic.css';
import { SITE_TITLE } from '../consts';

interface Props {
	title: string;
	description: string;
	image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description, image = '/blog-placeholder-1.jpg' } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<!-- Aplicar tema instantáneamente para evitar parpadeo -->
<script is:inline>
  (function() {
    try {
      const savedTheme = localStorage.getItem('preferred-theme');
      if (savedTheme === 'dark') {
        document.documentElement.setAttribute('data-theme', 'dark');
        // Añadimos una clase al body para estilos específicos
        document.addEventListener('DOMContentLoaded', () => {
          document.body.classList.add('dark-theme');
        });
      } else if (savedTheme === 'light') {
        document.documentElement.setAttribute('data-theme', 'light');
        document.addEventListener('DOMContentLoaded', () => {
          document.body.classList.add('light-theme');
        });
      } else {
        // Auto theme based on user preference
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        document.documentElement.setAttribute('data-theme', prefersDark ? 'dark' : 'light');
        document.addEventListener('DOMContentLoaded', () => {
          document.body.classList.add(prefersDark ? 'dark-theme' : 'light-theme');
        });
      }
    } catch (e) {
      console.error('Error al aplicar el tema inicial:', e);
    }
  })();
</script>

<!-- Estilos críticos para el tema que se aplicarán inmediatamente -->
<style is:inline>
  :root {
    --bg-color: #f5f7fa;
    --text-color: #333;
    --primary-color: #007bff;
    --primary-color-rgb: 0, 123, 255;
    --secondary-color: #6c757d;
    --accent-color: #28a745;
    --border-color: #dee2e6;
    --shadow-color: rgba(0, 0, 0, 0.1);
    --card-bg: #ffffff;
    --sidebar-bg: #ffffff;
    --header-bg: #ffffff;
    --hover-bg: #f2f2f2;
    --input-bg: #fff;
    --input-border: #ced4da;
  }
  
  [data-theme="dark"] {
    --bg-color: #121212;
    --text-color: #e0e0e0;
    --primary-color: #4dabf7;
    --primary-color-rgb: 77, 171, 247;
    --secondary-color: #adb5bd;
    --accent-color: #40c057;
    --border-color: #343a40;
    --shadow-color: rgba(0, 0, 0, 0.3);
    --card-bg: #1e1e1e;
    --sidebar-bg: #1e1e1e;
    --header-bg: #1e1e1e;
    --hover-bg: #333;
    --input-bg: #2c2c2c;
    --input-border: #495057;
  }
  
  body {
    background-color: var(--bg-color);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease;
  }
</style>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Script global para el tema -->
<script src="/theme.js" defer></script>
